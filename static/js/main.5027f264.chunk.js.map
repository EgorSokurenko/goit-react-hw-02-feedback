{"version":3,"sources":["compoments/Section/Section.js","compoments/FeedBack/Statistics/Statistics.js","compoments/FeedBack/FeedBackOptions/FeedBackOptions.js","compoments/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedBackOptions","OnAddBad","OnAddGood","OnAddNeutral","className","onClick","Notification","message","App","state","addGood","setState","pervState","addBad","addNeutral","countTotalFeedback","countPositiveFeedbackPercentage","this","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSACe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,K,MCHQ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,4CACA,+BACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,a,MCfO,SAASC,EAAT,GAAiE,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAC7D,OACE,8BACE,qBAAIC,UAAU,aAAd,UACE,6BACE,wBAAQC,QAASH,EAAjB,oBAEF,6BACE,wBAAQG,QAASF,EAAjB,uBAEF,6BACE,wBAAQE,QAASJ,EAAjB,wBCZK,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICIPC,E,4MACJC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPa,QAAU,WACR,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BjB,KAAMiB,EAAUjB,KAAO,O,EAG3BkB,OAAS,WACP,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAC5Bf,IAAKe,EAAUf,IAAM,O,EAGzBiB,WAAa,WACX,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAC5BhB,QAASgB,EAAUhB,QAAU,O,EAGjCmB,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQd,KAAR,EAAcE,IAAd,EAAmBD,S,EAGrBoB,gCAAkC,SAAClB,GACjC,OAAQ,EAAKW,MAAMd,KAAOG,EAAS,K,4CAErC,WACE,MAA+BmB,KAAKR,MAA5Bd,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACbE,EAAQmB,KAAKF,qBACnB,OACE,eAACxB,EAAD,CAASC,MAAM,wBAAf,UACE,cAACQ,EAAD,CACEC,SAAUgB,KAAKJ,OACfX,UAAWe,KAAKP,QAChBP,aAAcc,KAAKH,aAEV,IAAVhB,EACC,cAACQ,EAAD,CAAcC,QAAQ,sBAEtB,cAAC,EAAD,CACEZ,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,MAAOA,EACPC,mBACED,EACIoB,KAAKC,MAAMF,KAAKD,gCAAgClB,IAChD,W,GAjDAsB,aA0DHZ,IC3Dfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5027f264.chunk.js","sourcesContent":["import propTypes from \"prop-types\";\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n  children: propTypes.array,\r\n};\r\n","import propTypes from \"prop-types\";\r\nimport \"./Statistics.css\";\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <ul>\r\n        <li>Good:{good}</li>\r\n        <li>Neutral:{neutral}</li>\r\n        <li>Bad:{bad}</li>\r\n        <li>Total:{total}</li>\r\n        <li>Positive feedback:{positivePercentage}%</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  good: propTypes.number,\r\n  neutral: propTypes.number,\r\n  bad: propTypes.number,\r\n  total: propTypes.number,\r\n  positivePercentage: propTypes.number,\r\n};\r\n","import \"./FeedBackOption.css\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function FeedBackOptions({ OnAddBad, OnAddGood, OnAddNeutral }) {\r\n  return (\r\n    <div>\r\n      <ul className=\"listButton\">\r\n        <li>\r\n          <button onClick={OnAddGood}>Good</button>\r\n        </li>\r\n        <li>\r\n          <button onClick={OnAddNeutral}>Neutral</button>\r\n        </li>\r\n        <li>\r\n          <button onClick={OnAddBad}>Bad</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nFeedBackOptions.propTypes = {\r\n  OnAddBad: PropTypes.func,\r\n  OnAddGood: PropTypes.func,\r\n  OnAddNeutral: PropTypes.func,\r\n};\r\n","import propTypes from \"prop-types\";\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\nNotification.propTypes = {\r\n  message: propTypes.string,\r\n};\r\n","import React from \"react\";\nimport { Component } from \"react\";\nimport Section from \"./compoments/Section/\";\nimport Statistics from \"./compoments/FeedBack/Statistics/\";\nimport FeedBackOptions from \"./compoments/FeedBack/FeedBackOptions/\";\nimport Notification from \"./compoments/Notification/\";\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  addGood = () => {\n    this.setState((pervState) => ({\n      good: pervState.good + 1,\n    }));\n  };\n  addBad = () => {\n    this.setState((pervState) => ({\n      bad: pervState.bad + 1,\n    }));\n  };\n  addNeutral = () => {\n    this.setState((pervState) => ({\n      neutral: pervState.neutral + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const { good, bad, neutral } = this.state;\n    return good + bad + neutral;\n  };\n  countPositiveFeedbackPercentage = (total) => {\n    return (this.state.good / total) * 100;\n  };\n  render() {\n    const { good, bad, neutral } = this.state;\n    const total = this.countTotalFeedback();\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedBackOptions\n          OnAddBad={this.addBad}\n          OnAddGood={this.addGood}\n          OnAddNeutral={this.addNeutral}\n        />\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            bad={bad}\n            neutral={neutral}\n            total={total}\n            positivePercentage={\n              total\n                ? Math.round(this.countPositiveFeedbackPercentage(total))\n                : 0\n            }\n          />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}